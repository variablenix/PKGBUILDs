# Mainainer: TC <crt@archlinux.email>
# Old Maintainer: Sergej Pupykin <pupykin.s+arch@gmail.com>
# Old Maintainer: Dwayne Bent <dbb@dbb.io>
# Old Maintainer: Tilman Vatteroth <tilman.vatteroth@uni-dortmund.de>
# Contributor: Paul-Sebastian Manole <brokenthorn@gmail.com>
# Contributor: Timoth√©e Ravier <tim@siosm.fr>
# Contributor: Christoph Stahl <christoph.stahl@uni-dortmund.de>

pkgname=prosody
pkgrel=1
pkgver=0.9.12
pkgdesc="Lightweight and extensible Jabber/XMPP server written in Lua"
arch=('i686' 'x86_64')
url="https://prosody.im/"
license=('MIT')
depends=('lua51' 'lua51-socket' 'lua51-expat' 'lua51-filesystem' 'libidn'
         'openssl')
conflicts=('prosody')
provides=('prosody')
optdepends=('lua51-sec: TLS encryption support'
	    'lua51-bitop: websocket support'
	    'lua51-event: libevent support')
install=prosody.install
backup=('etc/prosody/prosody.cfg.lua')
source=("https://prosody.im/downloads/source/$pkgname-$pkgver.tar.gz"
        'prosody.tmpfile.d'
        'sysuser.conf'
        'prosody.service'
        'prosody.logrotated')

md5sums=('d743adea6cfbaacc3a24cc0c3928bb1b'
         'dc8405a6a235b83dc8a0dcdf7b71cbaa'
         '385ca73d9f6046f3636266ce9bf38797'
         'e5957c72ed81f9ade2dd7a08bec21fdb'
         '5b44aee99f1fa9e7f055e067688cafbd')

prepare() {
  cd "${pkgname}-${pkgver}"

  # disable logging to output and activate syslog
  sed -i s/"info = "/"-- info = "/g prosody.cfg.lua.dist
  sed -i s/"error = "/"-- error = "/g prosody.cfg.lua.dist
  sed -i s/"--\ \"\*syslog\"\;"/"\"*syslog\"\;"/g prosody.cfg.lua.dist

  # add pidfile and daemonize
  # daemonize is important for systemd!
  mv prosody.cfg.lua.dist prosody.cfg.lua.old

  echo --Important for systemd >> prosody.cfg.lua.dist
  echo -- daemonize is important for systemd. if you set this to false the systemd startup will freeze. >> prosody.cfg.lua.dist
  echo daemonize = true >> prosody.cfg.lua.dist
  echo 'pidfile = "/run/prosody/prosody.pid"'>> prosody.cfg.lua.dist
  echo "" >> prosody.cfg.lua.dist
  cat prosody.cfg.lua.old >> prosody.cfg.lua.dist
  rm prosody.cfg.lua.old

  #sed -i 's|sock, err = socket.udp();|sock, err = (socket.udp4 or socket.udp)();|g' net/dns.lua
}

build() {
  cd "${pkgname}-${pkgver}"
  ./configure --ostype=linux --prefix=/usr --sysconfdir=/etc/prosody \
    --datadir=/var/lib/prosody --with-lua-include=/usr/include/lua5.1 \
    --cflags="${CFLAGS} -fPIC -Wall -Wextra -D_GNU_SOURCE" \
    --ldflags="${LDFLAGS} -shared" --no-example-certs \
    --runwith=lua5.1
  make
}

package() {
  cd "${pkgname}-${pkgver}"
  make DESTDIR="${pkgdir}" install
  make DESTDIR="${pkgdir}" install -C tools/migration

  install -Dm 0644 "$srcdir"/prosody.tmpfile.d "${pkgdir}"/usr/lib/tmpfiles.d/prosody.conf
  install -Dm 0644 "$srcdir"/prosody.service "${pkgdir}"/usr/lib/systemd/system/prosody.service
  install -Dm644 "$srcdir"/sysuser.conf "$pkgdir"/usr/lib/sysusers.d/prosody.conf
  install -Dm640 "$srcdir"/prosody.logrotated "$pkgdir"/etc/logrotate.d/prosody

  for i in tools/*.lua; do
    install -Dm 0644 ${i} "${pkgdir}"/usr/share/prosody/${i}
  done

  install -Dm 0644 COPYING "${pkgdir}"/usr/share/licenses/$pkgver/COPYING
  rm "${pkgdir}"/etc/prosody/certs/*
}
